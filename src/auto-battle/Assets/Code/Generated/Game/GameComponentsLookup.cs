//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int SelfDestructTimer = 1;
    public const int View = 2;
    public const int ViewPath = 3;
    public const int ViewPrefab = 4;
    public const int Enemy = 5;
    public const int Hero = 6;
    public const int Id = 7;
    public const int Transform = 8;
    public const int WorldPosition = 9;
    public const int WorldRotation = 10;
    public const int Ability = 11;
    public const int Active = 12;
    public const int Block = 13;
    public const int Chance = 14;
    public const int Counterattack = 15;
    public const int DefaultAttack = 16;
    public const int Dodge = 17;
    public const int DoubleStrike = 18;
    public const int EffectSetups = 19;
    public const int StatusSetups = 20;
    public const int BaseStats = 21;
    public const int StatChange = 22;
    public const int StatsModifiers = 23;
    public const int CooldownLeft = 24;
    public const int CooldownUp = 25;
    public const int DamageEffect = 26;
    public const int Effect = 27;
    public const int EffectValue = 28;
    public const int HealEffect = 29;
    public const int Processed = 30;
    public const int ProducerId = 31;
    public const int TargetId = 32;
    public const int Blocked = 33;
    public const int Damage = 34;
    public const int DistanceToStartPoint = 35;
    public const int DistanceToTarget = 36;
    public const int Fighter = 37;
    public const int StartPointPosition = 38;
    public const int CurrentHealth = 39;
    public const int Dead = 40;
    public const int MaxHealth = 41;
    public const int ProcessingDeath = 42;
    public const int Direction = 43;
    public const int Moving = 44;
    public const int Speed = 45;
    public const int Affected = 46;
    public const int Applied = 47;
    public const int ApplierStatusLink = 48;
    public const int Lifetime = 49;
    public const int Status = 50;
    public const int StatusTypeId = 51;
    public const int Unapplied = 52;
    public const int AxisInput = 53;
    public const int Input = 54;

    public const int TotalComponents = 55;

    public static readonly string[] componentNames = {
        "Destructed",
        "SelfDestructTimer",
        "View",
        "ViewPath",
        "ViewPrefab",
        "Enemy",
        "Hero",
        "Id",
        "Transform",
        "WorldPosition",
        "WorldRotation",
        "Ability",
        "Active",
        "Block",
        "Chance",
        "Counterattack",
        "DefaultAttack",
        "Dodge",
        "DoubleStrike",
        "EffectSetups",
        "StatusSetups",
        "BaseStats",
        "StatChange",
        "StatsModifiers",
        "CooldownLeft",
        "CooldownUp",
        "DamageEffect",
        "Effect",
        "EffectValue",
        "HealEffect",
        "Processed",
        "ProducerId",
        "TargetId",
        "Blocked",
        "Damage",
        "DistanceToStartPoint",
        "DistanceToTarget",
        "Fighter",
        "StartPointPosition",
        "CurrentHealth",
        "Dead",
        "MaxHealth",
        "ProcessingDeath",
        "Direction",
        "Moving",
        "Speed",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "Lifetime",
        "Status",
        "StatusTypeId",
        "Unapplied",
        "AxisInput",
        "Input"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.CommonComponents.EnemyComponent),
        typeof(Code.Gameplay.Common.CommonComponents.HeroComponent),
        typeof(Code.Gameplay.Common.CommonComponents.Id),
        typeof(Code.Gameplay.Common.CommonComponents.TransformComponent),
        typeof(Code.Gameplay.Common.CommonComponents.WorldPosition),
        typeof(Code.Gameplay.Common.CommonComponents.WorldRotation),
        typeof(Code.Gameplay.Features.Abilities.Ability),
        typeof(Code.Gameplay.Features.Abilities.Active),
        typeof(Code.Gameplay.Features.Abilities.Block),
        typeof(Code.Gameplay.Features.Abilities.Chance),
        typeof(Code.Gameplay.Features.Abilities.Counterattack),
        typeof(Code.Gameplay.Features.Abilities.DefaultAttack),
        typeof(Code.Gameplay.Features.Abilities.Dodge),
        typeof(Code.Gameplay.Features.Abilities.DoubleStrike),
        typeof(Code.Gameplay.Features.Abilities.EffectSetups),
        typeof(Code.Gameplay.Features.Abilities.StatusSetups),
        typeof(Code.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.Gameplay.Features.CharacterStats.StatsModifiers),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownLeft),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownUp),
        typeof(Code.Gameplay.Features.Effect.DamageEffect),
        typeof(Code.Gameplay.Features.Effect.Effect),
        typeof(Code.Gameplay.Features.Effect.EffectValue),
        typeof(Code.Gameplay.Features.Effect.HealEffect),
        typeof(Code.Gameplay.Features.Effect.Processed),
        typeof(Code.Gameplay.Features.Effect.ProducerId),
        typeof(Code.Gameplay.Features.Effect.TargetId),
        typeof(Code.Gameplay.Features.Fighter.Blocked),
        typeof(Code.Gameplay.Features.Fighter.Damage),
        typeof(Code.Gameplay.Features.Fighter.DistanceToStartPoint),
        typeof(Code.Gameplay.Features.Fighter.DistanceToTarget),
        typeof(Code.Gameplay.Features.Fighter.FighterComponent),
        typeof(Code.Gameplay.Features.Fighter.StartPointPosition),
        typeof(Code.Gameplay.Features.Lifetime.CurrentHealth),
        typeof(Code.Gameplay.Features.Lifetime.Dead),
        typeof(Code.Gameplay.Features.Lifetime.MaxHealth),
        typeof(Code.Gameplay.Features.Lifetime.ProcessingDeath),
        typeof(Code.Gameplay.Features.Movement.Direction),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.Speed),
        typeof(Code.Gameplay.Features.Statuses.Affected),
        typeof(Code.Gameplay.Features.Statuses.Applied),
        typeof(Code.Gameplay.Features.Statuses.ApplierStatusLink),
        typeof(Code.Gameplay.Features.Statuses.Lifetime),
        typeof(Code.Gameplay.Features.Statuses.Status),
        typeof(Code.Gameplay.Features.Statuses.StatusTypeIdComponent),
        typeof(Code.Gameplay.Features.Statuses.Unapplied),
        typeof(Code.Gameplay.Input.AxisInput),
        typeof(Code.Gameplay.Input.Input)
    };
}
