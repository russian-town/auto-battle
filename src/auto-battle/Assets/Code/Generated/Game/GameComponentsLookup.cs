//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int SelfDestructTimer = 1;
    public const int View = 2;
    public const int ViewPath = 3;
    public const int ViewPrefab = 4;
    public const int Active = 5;
    public const int AnchoredPosition = 6;
    public const int Container = 7;
    public const int Id = 8;
    public const int Name = 9;
    public const int Parent = 10;
    public const int Transform = 11;
    public const int WorldPosition = 12;
    public const int WorldRotation = 13;
    public const int Ability = 14;
    public const int AbilityTypeId = 15;
    public const int AnimationSetups = 16;
    public const int BlockAbility = 17;
    public const int CounterattackAbility = 18;
    public const int DefaultAttackAbility = 19;
    public const int DodgeAbility = 20;
    public const int DoubleStrikeAbility = 21;
    public const int EffectSetups = 22;
    public const int ManaCost = 23;
    public const int ParentAbilityId = 24;
    public const int StatusSetups = 25;
    public const int AnimationEvent = 26;
    public const int Invoked = 27;
    public const int TargetFrame = 28;
    public const int Animation = 29;
    public const int AnimationEventConfigs = 30;
    public const int AnimationHash = 31;
    public const int AnimationSpeed = 32;
    public const int Completed = 33;
    public const int CurrentFrame = 34;
    public const int LastFrame = 35;
    public const int NormalizeTime = 36;
    public const int AnimationsQueue = 37;
    public const int Empty = 38;
    public const int MoveNext = 39;
    public const int QueueLinkedAnimationId = 40;
    public const int Analgesic = 41;
    public const int Buff = 42;
    public const int Vitamins = 43;
    public const int BaseStats = 44;
    public const int StatChange = 45;
    public const int StatsModifiers = 46;
    public const int Cooldown = 47;
    public const int CooldownLeft = 48;
    public const int CooldownUp = 49;
    public const int AnimationSetup = 50;
    public const int DamageEffect = 51;
    public const int Effect = 52;
    public const int EffectValue = 53;
    public const int EffectWindow = 54;
    public const int HealEffect = 55;
    public const int Processed = 56;
    public const int ProducerId = 57;
    public const int PushEffect = 58;
    public const int TargetId = 59;
    public const int Agility = 60;
    public const int BaseAbilities = 61;
    public const int Damage = 62;
    public const int Defence = 63;
    public const int FighterAnimator = 64;
    public const int Fighter = 65;
    public const int Mana = 66;
    public const int Offensive = 67;
    public const int StartPointPosition = 68;
    public const int FighterHealthBar = 69;
    public const int CurrentHealth = 70;
    public const int Dead = 71;
    public const int MaxHealth = 72;
    public const int ProcessingDeath = 73;
    public const int HasContainer = 74;
    public const int MovementSpeed = 75;
    public const int Affected = 76;
    public const int Applied = 77;
    public const int ApplierStatusLink = 78;
    public const int BlockStatus = 79;
    public const int DodgeStatus = 80;
    public const int PoisonStatus = 81;
    public const int Status = 82;
    public const int StunStatus = 83;
    public const int Unapplied = 84;

    public const int TotalComponents = 85;

    public static readonly string[] componentNames = {
        "Destructed",
        "SelfDestructTimer",
        "View",
        "ViewPath",
        "ViewPrefab",
        "Active",
        "AnchoredPosition",
        "Container",
        "Id",
        "Name",
        "Parent",
        "Transform",
        "WorldPosition",
        "WorldRotation",
        "Ability",
        "AbilityTypeId",
        "AnimationSetups",
        "BlockAbility",
        "CounterattackAbility",
        "DefaultAttackAbility",
        "DodgeAbility",
        "DoubleStrikeAbility",
        "EffectSetups",
        "ManaCost",
        "ParentAbilityId",
        "StatusSetups",
        "AnimationEvent",
        "Invoked",
        "TargetFrame",
        "Animation",
        "AnimationEventConfigs",
        "AnimationHash",
        "AnimationSpeed",
        "Completed",
        "CurrentFrame",
        "LastFrame",
        "NormalizeTime",
        "AnimationsQueue",
        "Empty",
        "MoveNext",
        "QueueLinkedAnimationId",
        "Analgesic",
        "Buff",
        "Vitamins",
        "BaseStats",
        "StatChange",
        "StatsModifiers",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "AnimationSetup",
        "DamageEffect",
        "Effect",
        "EffectValue",
        "EffectWindow",
        "HealEffect",
        "Processed",
        "ProducerId",
        "PushEffect",
        "TargetId",
        "Agility",
        "BaseAbilities",
        "Damage",
        "Defence",
        "FighterAnimator",
        "Fighter",
        "Mana",
        "Offensive",
        "StartPointPosition",
        "FighterHealthBar",
        "CurrentHealth",
        "Dead",
        "MaxHealth",
        "ProcessingDeath",
        "HasContainer",
        "MovementSpeed",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "BlockStatus",
        "DodgeStatus",
        "PoisonStatus",
        "Status",
        "StunStatus",
        "Unapplied"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.CommonComponents.Active),
        typeof(Code.Gameplay.Common.CommonComponents.AnchoredPositionComponent),
        typeof(Code.Gameplay.Common.CommonComponents.Container),
        typeof(Code.Gameplay.Common.CommonComponents.Id),
        typeof(Code.Gameplay.Common.CommonComponents.Name),
        typeof(Code.Gameplay.Common.CommonComponents.Parent),
        typeof(Code.Gameplay.Common.CommonComponents.TransformComponent),
        typeof(Code.Gameplay.Common.CommonComponents.WorldPosition),
        typeof(Code.Gameplay.Common.CommonComponents.WorldRotation),
        typeof(Code.Gameplay.Features.Abilities.Ability),
        typeof(Code.Gameplay.Features.Abilities.AbilityTypeIdComponent),
        typeof(Code.Gameplay.Features.Abilities.AnimationSetups),
        typeof(Code.Gameplay.Features.Abilities.BlockAbility),
        typeof(Code.Gameplay.Features.Abilities.CounterattackAbility),
        typeof(Code.Gameplay.Features.Abilities.DefaultAttackAbility),
        typeof(Code.Gameplay.Features.Abilities.DodgeAbility),
        typeof(Code.Gameplay.Features.Abilities.DoubleStrikeAbility),
        typeof(Code.Gameplay.Features.Abilities.EffectSetups),
        typeof(Code.Gameplay.Features.Abilities.ManaCost),
        typeof(Code.Gameplay.Features.Abilities.ParentAbilityId),
        typeof(Code.Gameplay.Features.Abilities.StatusSetups),
        typeof(Code.Gameplay.Features.AnimationEvents.AnimationEvent),
        typeof(Code.Gameplay.Features.AnimationEvents.Invoked),
        typeof(Code.Gameplay.Features.AnimationEvents.TargetFrame),
        typeof(Code.Gameplay.Features.Animations.Animation),
        typeof(Code.Gameplay.Features.Animations.AnimationEventConfigs),
        typeof(Code.Gameplay.Features.Animations.AnimationHash),
        typeof(Code.Gameplay.Features.Animations.AnimationSpeed),
        typeof(Code.Gameplay.Features.Animations.Completed),
        typeof(Code.Gameplay.Features.Animations.CurrentFrame),
        typeof(Code.Gameplay.Features.Animations.LastFrame),
        typeof(Code.Gameplay.Features.Animations.NormalizeTime),
        typeof(Code.Gameplay.Features.AnimationsQueue.AnimationsQueue),
        typeof(Code.Gameplay.Features.AnimationsQueue.Empty),
        typeof(Code.Gameplay.Features.AnimationsQueue.MoveNext),
        typeof(Code.Gameplay.Features.AnimationsQueue.QueueLinkedAnimationId),
        typeof(Code.Gameplay.Features.Buffs.AnalgesicComponent),
        typeof(Code.Gameplay.Features.Buffs.BuffComponent),
        typeof(Code.Gameplay.Features.Buffs.VitaminsComponent),
        typeof(Code.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.Gameplay.Features.CharacterStats.StatsModifiers),
        typeof(Code.Gameplay.Features.Cooldown.Cooldown),
        typeof(Code.Gameplay.Features.Cooldown.CooldownLeft),
        typeof(Code.Gameplay.Features.Cooldown.CooldownUp),
        typeof(Code.Gameplay.Features.Effect.AnimationSetupComponent),
        typeof(Code.Gameplay.Features.Effect.DamageEffect),
        typeof(Code.Gameplay.Features.Effect.Effect),
        typeof(Code.Gameplay.Features.Effect.EffectValue),
        typeof(Code.Gameplay.Features.Effect.EffectWindowComponent),
        typeof(Code.Gameplay.Features.Effect.HealEffect),
        typeof(Code.Gameplay.Features.Effect.Processed),
        typeof(Code.Gameplay.Features.Effect.ProducerId),
        typeof(Code.Gameplay.Features.Effect.PushEffect),
        typeof(Code.Gameplay.Features.Effect.TargetId),
        typeof(Code.Gameplay.Features.Fighter.Agility),
        typeof(Code.Gameplay.Features.Fighter.BaseAbilities),
        typeof(Code.Gameplay.Features.Fighter.Damage),
        typeof(Code.Gameplay.Features.Fighter.Defence),
        typeof(Code.Gameplay.Features.Fighter.FighterAnimatorComponent),
        typeof(Code.Gameplay.Features.Fighter.FighterComponent),
        typeof(Code.Gameplay.Features.Fighter.Mana),
        typeof(Code.Gameplay.Features.Fighter.Offensive),
        typeof(Code.Gameplay.Features.Fighter.StartPointPosition),
        typeof(Code.Gameplay.Features.HealthBar.FighterHealthBarComponent),
        typeof(Code.Gameplay.Features.Lifetime.CurrentHealth),
        typeof(Code.Gameplay.Features.Lifetime.Dead),
        typeof(Code.Gameplay.Features.Lifetime.MaxHealth),
        typeof(Code.Gameplay.Features.Lifetime.ProcessingDeath),
        typeof(Code.Gameplay.Features.Movement.HasContainer),
        typeof(Code.Gameplay.Features.Movement.MovementSpeed),
        typeof(Code.Gameplay.Features.Statuses.Affected),
        typeof(Code.Gameplay.Features.Statuses.Applied),
        typeof(Code.Gameplay.Features.Statuses.ApplierStatusLink),
        typeof(Code.Gameplay.Features.Statuses.BlockStatus),
        typeof(Code.Gameplay.Features.Statuses.DodgeStatus),
        typeof(Code.Gameplay.Features.Statuses.PoisonStatus),
        typeof(Code.Gameplay.Features.Statuses.Status),
        typeof(Code.Gameplay.Features.Statuses.StunStatus),
        typeof(Code.Gameplay.Features.Statuses.Unapplied)
    };
}
