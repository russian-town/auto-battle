//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimationQueue;

    public static Entitas.IMatcher<GameEntity> AnimationQueue {
        get {
            if (_matcherAnimationQueue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnimationQueue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimationQueue = matcher;
            }

            return _matcherAnimationQueue;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Animations.AnimationQueue animationQueue { get { return (Code.Gameplay.Features.Animations.AnimationQueue)GetComponent(GameComponentsLookup.AnimationQueue); } }
    public System.Collections.Generic.Queue<Code.Gameplay.Features.Animations.Configs.AnimationSetup> AnimationQueue { get { return animationQueue.Value; } }
    public bool hasAnimationQueue { get { return HasComponent(GameComponentsLookup.AnimationQueue); } }

    public GameEntity AddAnimationQueue(System.Collections.Generic.Queue<Code.Gameplay.Features.Animations.Configs.AnimationSetup> newValue) {
        var index = GameComponentsLookup.AnimationQueue;
        var component = (Code.Gameplay.Features.Animations.AnimationQueue)CreateComponent(index, typeof(Code.Gameplay.Features.Animations.AnimationQueue));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAnimationQueue(System.Collections.Generic.Queue<Code.Gameplay.Features.Animations.Configs.AnimationSetup> newValue) {
        var index = GameComponentsLookup.AnimationQueue;
        var component = (Code.Gameplay.Features.Animations.AnimationQueue)CreateComponent(index, typeof(Code.Gameplay.Features.Animations.AnimationQueue));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAnimationQueue() {
        RemoveComponent(GameComponentsLookup.AnimationQueue);
        return this;
    }
}
