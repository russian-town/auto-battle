//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpeedGraph;

    public static Entitas.IMatcher<GameEntity> SpeedGraph {
        get {
            if (_matcherSpeedGraph == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpeedGraph);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpeedGraph = matcher;
            }

            return _matcherSpeedGraph;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Movement.SpeedGraph speedGraph { get { return (Code.Gameplay.Features.Movement.SpeedGraph)GetComponent(GameComponentsLookup.SpeedGraph); } }
    public UnityEngine.AnimationCurve SpeedGraph { get { return speedGraph.Value; } }
    public bool hasSpeedGraph { get { return HasComponent(GameComponentsLookup.SpeedGraph); } }

    public GameEntity AddSpeedGraph(UnityEngine.AnimationCurve newValue) {
        var index = GameComponentsLookup.SpeedGraph;
        var component = (Code.Gameplay.Features.Movement.SpeedGraph)CreateComponent(index, typeof(Code.Gameplay.Features.Movement.SpeedGraph));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceSpeedGraph(UnityEngine.AnimationCurve newValue) {
        var index = GameComponentsLookup.SpeedGraph;
        var component = (Code.Gameplay.Features.Movement.SpeedGraph)CreateComponent(index, typeof(Code.Gameplay.Features.Movement.SpeedGraph));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveSpeedGraph() {
        RemoveComponent(GameComponentsLookup.SpeedGraph);
        return this;
    }
}
